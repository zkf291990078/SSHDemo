<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd 
							http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd 
							http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd 
							http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd ">

	<context:property-placeholder location="classpath:db.properties" />

	<bean name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>

	<bean name="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<tx:advice id="myAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" isolation="REPEATABLE_READ"
				propagation="REQUIRED" read-only="false" />
			<tx:method name="persist*" isolation="REPEATABLE_READ"
				propagation="REQUIRED" read-only="false" />
			<tx:method name="update*" isolation="REPEATABLE_READ"
				propagation="REQUIRED" read-only="false" />
			<tx:method name="modify*" isolation="REPEATABLE_READ"
				propagation="REQUIRED" read-only="false" />
			<tx:method name="delete*" isolation="REPEATABLE_READ"
				propagation="REQUIRED" read-only="false" />
			<tx:method name="remove*" isolation="REPEATABLE_READ"
				propagation="REQUIRED" read-only="false" />
			<tx:method name="get*" isolation="REPEATABLE_READ"
				propagation="REQUIRED" read-only="true" />
			<tx:method name="find*" isolation="REPEATABLE_READ"
				propagation="REQUIRED" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut
			expression="execution(* com.anywell.ssh.services.impl.*ServiceImpl.*(..))"
			id="myPointcut" />
		<aop:advisor advice-ref="myAdvice" pointcut-ref="myPointcut" />
	</aop:config>

	<!-- <tx:annotation-driven transaction-manager="transactionManager" /> -->

	<bean name="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect
				</prop>
				<!-- 可选配置 -->
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>

		<!-- 引入orm元数据,指定orm元数据所在的包路径,spring会自动读取包中的所有配置 -->
		<property name="mappingDirectoryLocations" value="classpath:com/anywell/ssh/domain"></property>
	</bean>



	<bean name="customerAction" class="com.anywell.ssh.web.action.CustomerAction"
		scope="prototype">
		<property name="cs" ref="customerService"></property>
	</bean>
	<bean name="userAction" class="com.anywell.ssh.web.action.UserAction"
		scope="prototype"></bean>
	<bean name="baseDictAction" class="com.anywell.ssh.web.action.BaseDictAction"
		scope="prototype">
		<property name="bs" ref="baseDictService"></property>
	</bean>

	<bean name="customerService" class="com.anywell.ssh.services.impl.CustomerServiceImpl">
		<property name="cd" ref="customerDao"></property>
	</bean>
	<bean name="baseDictService" class="com.anywell.ssh.services.impl.BaseDictServiceImpl">
		<property name="bd" ref="baseDictDao"></property>
	</bean>
	<bean name="baseDictDao" class="com.anywell.ssh.dao.impl.BaseDictDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean name="customerDao" class="com.anywell.ssh.dao.impl.CustomerDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

</beans>